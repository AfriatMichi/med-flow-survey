
import jsPDF from 'jspdf';

interface QuestionnaireData {
  fullName: string;
  date: Date | undefined;
  signature: string;
  answers: Record<number, boolean>;
}

export const generateQuestionnairePDF = (data: QuestionnaireData) => {
  const pdf = new jsPDF();
  
  // Set font
  pdf.setFont('helvetica');
  
  // Title
  pdf.setFontSize(20);
  pdf.setTextColor(37, 99, 235); // Blue color
  pdf.text('Medical Questionnaire Report', 20, 30);
  
  // Patient Information
  pdf.setFontSize(16);
  pdf.setTextColor(0, 0, 0);
  pdf.text('Patient Information', 20, 50);
  
  pdf.setFontSize(12);
  pdf.text(`Name: ${data.fullName}`, 20, 65);
  pdf.text(`Date: ${data.date ? data.date.toLocaleDateString() : 'Not specified'}`, 20, 75);
  
  // Questionnaire Summary
  pdf.setFontSize(16);
  pdf.text('Questionnaire Summary', 20, 95);
  
  pdf.setFontSize(12);
  pdf.text('Total Questions: 20', 20, 110);
  pdf.text('Status: Completed', 20, 120);
  pdf.text(`Completion Date: ${new Date().toLocaleDateString()}`, 20, 130);
  
  // Add signature if available
  if (data.signature) {
    pdf.setFontSize(16);
    pdf.text('Digital Signature', 20, 150);
    
    try {
      // Add signature image
      pdf.addImage(data.signature, 'PNG', 20, 160, 100, 40);
    } catch (error) {
      console.warn('Could not add signature to PDF:', error);
      pdf.setFontSize(12);
      pdf.text('Signature captured (unable to display in PDF)', 20, 170);
    }
  }
  
  // Footer
  pdf.setFontSize(10);
  pdf.setTextColor(128, 128, 128);
  pdf.text('Generated by Medical Questionnaire System', 20, 280);
  
  return pdf;
};
